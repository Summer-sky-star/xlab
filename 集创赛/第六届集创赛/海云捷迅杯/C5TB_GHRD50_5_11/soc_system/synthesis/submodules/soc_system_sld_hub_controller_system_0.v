// soc_system_sld_hub_controller_system_0.v

// This file was auto-generated from altera_sld_hub_controller_system_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module soc_system_sld_hub_controller_system_0 #(
		parameter ENABLE_JTAG_IO_SELECTION = 0
	) (
		input  wire        clk_clk,          //   clk.clk
		input  wire        reset_reset,      // reset.reset
		output wire        s0_waitrequest,   //    s0.waitrequest
		output wire [31:0] s0_readdata,      //      .readdata
		output wire        s0_readdatavalid, //      .readdatavalid
		input  wire [0:0]  s0_burstcount,    //      .burstcount
		input  wire [31:0] s0_writedata,     //      .writedata
		input  wire [6:0]  s0_address,       //      .address
		input  wire        s0_write,         //      .write
		input  wire        s0_read,          //      .read
		input  wire [3:0]  s0_byteenable,    //      .byteenable
		input  wire        s0_debugaccess    //      .debugaccess
	);

	wire        fabric_reset_0_reset;                // fabric:reset_0_reset -> hub_controller:reset_reset
	wire        link_debug_reset_reset;              // link:debug_reset_reset -> fabric:reset_reset
	wire        link_h2t_valid;                      // link:h2t_valid -> fabric:h2t_valid
	wire  [7:0] link_h2t_data;                       // link:h2t_data -> fabric:h2t_data
	wire        link_h2t_ready;                      // fabric:h2t_ready -> link:h2t_ready
	wire        link_h2t_channel;                    // link:h2t_channel -> fabric:h2t_channel
	wire        link_h2t_startofpacket;              // link:h2t_startofpacket -> fabric:h2t_startofpacket
	wire        link_h2t_endofpacket;                // link:h2t_endofpacket -> fabric:h2t_endofpacket
	wire        fabric_t2h_valid;                    // fabric:t2h_valid -> link:t2h_valid
	wire  [7:0] fabric_t2h_data;                     // fabric:t2h_data -> link:t2h_data
	wire        fabric_t2h_ready;                    // link:t2h_ready -> fabric:t2h_ready
	wire  [0:0] fabric_t2h_channel;                  // fabric:t2h_channel -> link:t2h_channel
	wire        fabric_t2h_startofpacket;            // fabric:t2h_startofpacket -> link:t2h_startofpacket
	wire        fabric_t2h_endofpacket;              // fabric:t2h_endofpacket -> link:t2h_endofpacket
	wire        fabric_h2t_0_valid;                  // fabric:h2t_0_valid -> hub_controller:sink_valid
	wire  [7:0] fabric_h2t_0_data;                   // fabric:h2t_0_data -> hub_controller:sink_data
	wire        fabric_h2t_0_ready;                  // hub_controller:sink_ready -> fabric:h2t_0_ready
	wire        fabric_h2t_0_startofpacket;          // fabric:h2t_0_startofpacket -> hub_controller:sink_startofpacket
	wire        fabric_h2t_0_endofpacket;            // fabric:h2t_0_endofpacket -> hub_controller:sink_endofpacket
	wire        hub_controller_source_valid;         // hub_controller:source_valid -> fabric:t2h_0_valid
	wire  [7:0] hub_controller_source_data;          // hub_controller:source_data -> fabric:t2h_0_data
	wire        hub_controller_source_ready;         // fabric:t2h_0_ready -> hub_controller:source_ready
	wire        hub_controller_source_startofpacket; // hub_controller:source_startofpacket -> fabric:t2h_0_startofpacket
	wire        hub_controller_source_endofpacket;   // hub_controller:source_endofpacket -> fabric:t2h_0_endofpacket
	wire        link_mgmt_valid;                     // link:mgmt_valid -> avalon_st_adapter:in_0_valid
	wire        link_mgmt_data;                      // link:mgmt_data -> avalon_st_adapter:in_0_data
	wire  [7:0] link_mgmt_channel;                   // link:mgmt_channel -> avalon_st_adapter:in_0_channel
	wire        avalon_st_adapter_out_0_valid;       // avalon_st_adapter:out_0_valid -> fabric:mgmt_valid
	wire        avalon_st_adapter_out_0_data;        // avalon_st_adapter:out_0_data -> fabric:mgmt_data
	wire        avalon_st_adapter_out_0_channel;     // avalon_st_adapter:out_0_channel -> fabric:mgmt_channel

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (ENABLE_JTAG_IO_SELECTION != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					enable_jtag_io_selection_check ( .error(1'b1) );
		end
	endgenerate

	soc_system_sld_hub_controller_system_0_link link (
		.clk_clk           (clk_clk),                  //         clk.clk
		.reset_reset       (reset_reset),              //       reset.reset
		.s0_waitrequest    (s0_waitrequest),           //          s0.waitrequest
		.s0_readdata       (s0_readdata),              //            .readdata
		.s0_readdatavalid  (s0_readdatavalid),         //            .readdatavalid
		.s0_burstcount     (s0_burstcount),            //            .burstcount
		.s0_writedata      (s0_writedata),             //            .writedata
		.s0_address        (s0_address),               //            .address
		.s0_write          (s0_write),                 //            .write
		.s0_read           (s0_read),                  //            .read
		.s0_byteenable     (s0_byteenable),            //            .byteenable
		.s0_debugaccess    (s0_debugaccess),           //            .debugaccess
		.h2t_data          (link_h2t_data),            //         h2t.data
		.h2t_valid         (link_h2t_valid),           //            .valid
		.h2t_ready         (link_h2t_ready),           //            .ready
		.h2t_startofpacket (link_h2t_startofpacket),   //            .startofpacket
		.h2t_endofpacket   (link_h2t_endofpacket),     //            .endofpacket
		.h2t_channel       (link_h2t_channel),         //            .channel
		.t2h_data          (fabric_t2h_data),          //         t2h.data
		.t2h_valid         (fabric_t2h_valid),         //            .valid
		.t2h_ready         (fabric_t2h_ready),         //            .ready
		.t2h_startofpacket (fabric_t2h_startofpacket), //            .startofpacket
		.t2h_endofpacket   (fabric_t2h_endofpacket),   //            .endofpacket
		.t2h_channel       (fabric_t2h_channel),       //            .channel
		.mgmt_valid        (link_mgmt_valid),          //        mgmt.valid
		.mgmt_data         (link_mgmt_data),           //            .data
		.mgmt_channel      (link_mgmt_channel),        //            .channel
		.debug_reset_reset (link_debug_reset_reset)    // debug_reset.reset
	);

	soc_system_sld_hub_controller_system_0_fabric fabric (
		.clk_clk             (clk_clk),                             //     clk.clk
		.reset_reset         (link_debug_reset_reset),              //   reset.reset
		.h2t_ready           (link_h2t_ready),                      //     h2t.ready
		.h2t_valid           (link_h2t_valid),                      //        .valid
		.h2t_data            (link_h2t_data),                       //        .data
		.h2t_startofpacket   (link_h2t_startofpacket),              //        .startofpacket
		.h2t_endofpacket     (link_h2t_endofpacket),                //        .endofpacket
		.h2t_channel         (link_h2t_channel),                    //        .channel
		.t2h_ready           (fabric_t2h_ready),                    //     t2h.ready
		.t2h_valid           (fabric_t2h_valid),                    //        .valid
		.t2h_data            (fabric_t2h_data),                     //        .data
		.t2h_startofpacket   (fabric_t2h_startofpacket),            //        .startofpacket
		.t2h_endofpacket     (fabric_t2h_endofpacket),              //        .endofpacket
		.t2h_channel         (fabric_t2h_channel),                  //        .channel
		.mgmt_valid          (avalon_st_adapter_out_0_valid),       //    mgmt.valid
		.mgmt_data           (avalon_st_adapter_out_0_data),        //        .data
		.mgmt_channel        (avalon_st_adapter_out_0_channel),     //        .channel
		.reset_0_reset       (fabric_reset_0_reset),                // reset_0.reset
		.h2t_0_ready         (fabric_h2t_0_ready),                  //   h2t_0.ready
		.h2t_0_valid         (fabric_h2t_0_valid),                  //        .valid
		.h2t_0_data          (fabric_h2t_0_data),                   //        .data
		.h2t_0_startofpacket (fabric_h2t_0_startofpacket),          //        .startofpacket
		.h2t_0_endofpacket   (fabric_h2t_0_endofpacket),            //        .endofpacket
		.t2h_0_ready         (hub_controller_source_ready),         //   t2h_0.ready
		.t2h_0_valid         (hub_controller_source_valid),         //        .valid
		.t2h_0_data          (hub_controller_source_data),          //        .data
		.t2h_0_startofpacket (hub_controller_source_startofpacket), //        .startofpacket
		.t2h_0_endofpacket   (hub_controller_source_endofpacket)    //        .endofpacket
	);

	soc_system_sld_hub_controller_system_0_hub_controller #(
		.ENABLE_JTAG_IO_SELECTION (0)
	) hub_controller (
		.clk_clk              (clk_clk),                             //    clk.clk
		.reset_reset          (fabric_reset_0_reset),                //  reset.reset
		.sink_valid           (fabric_h2t_0_valid),                  //   sink.valid
		.sink_startofpacket   (fabric_h2t_0_startofpacket),          //       .startofpacket
		.sink_endofpacket     (fabric_h2t_0_endofpacket),            //       .endofpacket
		.sink_data            (fabric_h2t_0_data),                   //       .data
		.sink_ready           (fabric_h2t_0_ready),                  //       .ready
		.source_valid         (hub_controller_source_valid),         // source.valid
		.source_startofpacket (hub_controller_source_startofpacket), //       .startofpacket
		.source_endofpacket   (hub_controller_source_endofpacket),   //       .endofpacket
		.source_data          (hub_controller_source_data),          //       .data
		.source_ready         (hub_controller_source_ready)          //       .ready
	);

	soc_system_sld_hub_controller_system_0_avalon_st_adapter #(
		.inBitsPerSymbol (1),
		.inUsePackets    (0),
		.inDataWidth     (1),
		.inChannelWidth  (8),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (0),
		.inReadyLatency  (0),
		.outDataWidth    (1),
		.outChannelWidth (1),
		.outErrorWidth   (0),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (0),
		.outReadyLatency (0)
	) avalon_st_adapter (
		.in_clk_0_clk   (clk_clk),                         // in_clk_0.clk
		.in_rst_0_reset (reset_reset),                     // in_rst_0.reset
		.in_0_data      (link_mgmt_data),                  //     in_0.data
		.in_0_valid     (link_mgmt_valid),                 //         .valid
		.in_0_channel   (link_mgmt_channel),               //         .channel
		.out_0_data     (avalon_st_adapter_out_0_data),    //    out_0.data
		.out_0_valid    (avalon_st_adapter_out_0_valid),   //         .valid
		.out_0_channel  (avalon_st_adapter_out_0_channel)  //         .channel
	);

endmodule
